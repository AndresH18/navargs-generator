namespace NavArgs.Abstractions.Tests;

public static class Constants
{
    public const string AccountDetailsWithoutRouteClass =
        """
        using NavArgs.Abstractions;
        
        namespace UserNamespace;

        [NavDestination]
        public partial class AccountDetails : INavDestination
        {
            public string Route { get; } = "account-details";
            public int Id { get; set };
            public string Name { get; set; }
            public string Email { get; set; }
        }
        """;

    public const string ExpectedAccountDetailsWithoutRouteClass = @"
        // <auto-generated/>
        #nullable enable
        using System;
        using System.Collections.Generic;
        using NavArgs.Abstractions;
        
        namespace UserNamespace
        {
            partial class AccountDetails
            {
                public INavArgs GetArgs()
                {
                    return new AccountDetailsArgs(Id, Name, Email);
                }

                public IDictionary<string, object?> ToDictionary()
                {
                    return new Dictionary<string, object?>()
                    {[nameof(Id)] = this.Id, [nameof(Name)] = this.Name, [nameof(Email)] = this.Email};
                }
            }

            // <auto-generated/>
            public record AccountDetailsArgs(int Id, string Name, string Email) : INavArgs
            {
                public static AccountDetailsArgs FromDictionary(IDictionary<string, object> dictionary)
                {
                    return new AccountDetailsArgs((int)Convert.ChangeType(dictionary[nameof(Id)], typeof(int)), (string)Convert.ChangeType(dictionary[nameof(Name)], typeof(string)), (string)Convert.ChangeType(dictionary[nameof(Email)], typeof(string)));
                }
            }
        }
        ";
}